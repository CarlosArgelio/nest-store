{
  "Create NestJS Service": {
    "prefix": "nest:s",
    "body": [
      "import { Injectable, NotFoundException } from '@nestjs/common';",
      "import { InjectRepository } from '@nestjs/typeorm';",
      "import { Repository } from 'typeorm';",
      "",
      "import { $2 } from '${1:entity-route}';",
      "import { ${4:createDto}, ${5:updateDto} } from '${3:dto-route}';",
      "",
      "@Injectable()",
      "export class ${6:serviceName}Service {",
      "  constructor(",
      "    @InjectRepository($2)",
      "    private ${7:repo}: Repository<$2>,",
      "  ) {}",
      "${0}",
      "  async findAll() {",
      "    return await this.$7.find();",
      "  }",
      "",
      "  async findOne(id: number) {",
      "    const ${8:object} = await this.$7.findOne(id);",
      "    if (!$8) throw new NotFoundException(`${9:object} not found.`);",
      "    return $8;",
      "  }",
      "",
      "  async create(data: $4) {",
      "    const ${10:newObject} = this.$7.create(data);",
      "    return await this.$7.save($10);",
      "  }",
      "",
      "  async update(id: number, changes: $5) {",
      "    const $8 = await this.findOne(id);",
      "    this.$7.merge($8, changes);",
      "    return await this.$7.save($8);",
      "  }",
      "",
      "  async remove(id: number) {",
      "    return await this.$7.delete(id);",
      "  }",
      "}"
    ],
    "description": "This service has a basic CRUD implemented"
  }
}
